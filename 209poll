#!/usr/bin/env python3

import sys, os, math, csv
from sys import stdin
from math import factorial, sqrt, exp, pi

def error_handling():
    arg = []
    i = 1
    if (len(sys.argv) != 4):
        exit(84)
    try:
        while (i < len(sys.argv)-1):
            arg.append(int(sys.argv[i]))
            i += 1
        arg.append(float(sys.argv[i]) / 100)
    except:
        exit(84)
    if arg[0] < 0 or arg[1] < 0:
        exit(84)
    return arg

def clamp(x):
    return min(max(x, 0), 1)

def interval(x, i):
    return (100 * clamp(x - i), 100 * clamp(x + i))

def first_print(tab):
    print("Population size: ", int(tab[0]), sep="")
    print("Sample size: ", int(tab[1]), sep="")
    if tab[2]*100 > 100:
        exit(84)
    print("Voting intentions: ", tab[2]*100, "%", sep="")

def second_print(v, i95, i99):
    print("Variance:\t\t\t", format(v, ".6f"), sep="")
    print("95% confidence interval:\t[", format(i95[0], ".2f"),"%; ", format(i95[1], ".2f"), "%]", sep ="")
    print("99% confidence interval:\t[", format(i99[0], ".2f"),"%; ", format(i99[1], ".2f"), "%]", sep ="")

def my_calculs(tab):
    v = ((tab[2] * (1 - tab[2])) / tab[1]) * ((tab[0] - tab[1]) / (tab[0] - 1))
    i95 = interval(tab[2], 1.96 * sqrt(v))
    i99 = interval(tab[2], 2.58 * sqrt(v))
    if int(i95[0]) <= 0 or int(i95[1]) >= 100:
        i95 = 0
    if int(i99[0]) <= 0 or float(i99[1]) >= 100:
        i95 = 100
    return v, i95, i99

def main():
    arg = error_handling()
    first_print(arg)
    v, i95, i99 = my_calculs(arg)
    second_print(v, i95, i99)

main()
